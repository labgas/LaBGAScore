%% LaBGAScore_pet_dcm2bids.m
%
%
% *USAGE*
%
% This script completes partial BIDS conversion of (TSPO) PET data by a previous
% run of KUL_dcm2bids.sh
%
%
% *OPTIONS*
%
% Should be self-explanatory, see below!
%
%
% -------------------------------------------------------------------------
%
% author: Lukas Van Oudenhove
%
% date:   KU Leuven, November, 2023
%
% -------------------------------------------------------------------------
%
% LaBGAScore_pet_dcm2bids.m             v2.0
%
% last modified: 2024/03/14
%
%
%% OPTIONS
% --------

tracer_string = 'DPA714';               % tracer identifier for name of pet dir and filenames
filename_search_string = 'TSPO';        % string identifying pet filenames partially converted by previous KUL_dcm2bids.sh run 
zte_search_string = 'ZTE-MRAC';         % string identifying zte image in SeriesDescription field of .json file generated by previous KUL_dcm2bids.sh run
dynamic_search_string = 'PET_20f';      % string identifying dynamic pet image in SeriesDescription field of .json file generated by previous KUL_dcm2bids.sh run


%% CODE
% -----

% DEFINE DIRS

discoverie_prep_s0_define_directories;

tmp_dcm2bidsdir = fullfile(BIDSdir,'tmp_dcm2bids');

dir_tmp_dcm2bids = dir(fullfile(tmp_dcm2bidsdir,'sub-*'));

subs_in_tmp = {dir_tmp_dcm2bids.name}';


% LOOP OVER SUBJECTS

i = 1;
subscopied_idx = [];

for sub = 1:size(subs_in_tmp,1)
    
    subdir_tmp_dcm2bids = dir(fullfile(tmp_dcm2bidsdir,subs_in_tmp{sub}));

    idx1 = contains({subdir_tmp_dcm2bids.name}', filename_search_string);
    idx2 = contains({subdir_tmp_dcm2bids.name}', dynamic_search_string);
    idx = logical(idx1 + idx2);
    
    subdir_tmp_dcm2bids_trimmed = subdir_tmp_dcm2bids(idx);
    
    if ~isempty(subdir_tmp_dcm2bids_trimmed)
        
        subscopied_names{i} = subs_in_tmp{sub};
        subscopied_idx = [subscopied_idx, sub];
        
        i = i+1;
        
        subdir_tmp_dcm2bids_tspo_json = subdir_tmp_dcm2bids_trimmed(contains({subdir_tmp_dcm2bids_trimmed.name}','json'));
        subdir_tmp_dcm2bids_tspo_nii = subdir_tmp_dcm2bids_trimmed(contains({subdir_tmp_dcm2bids_trimmed.name}','nii'));
        subbidspetdir = fullfile(BIDSdir,subs_in_tmp{sub},['pet_trc-' tracer_string]);
        
            if ~exist(subbidspetdir,'dir')
                mkdir(subbidspetdir);
            end
        
        for file = 1:size(subdir_tmp_dcm2bids_tspo_json,1)
            
            jsonfilepath = fullfile(subdir_tmp_dcm2bids_tspo_json(file).folder, subdir_tmp_dcm2bids_tspo_json(file).name);
            niigzfilepath = fullfile(subdir_tmp_dcm2bids_tspo_nii(file).folder, subdir_tmp_dcm2bids_tspo_nii(file).name);
            jsonfilestruct = spm_jsonread(jsonfilepath);
            
                if contains(jsonfilestruct.SeriesDescription, zte_search_string)
                    
                    niifilepath = gunzip(niigzfilepath);
                    
                        if size(niifilepath,1) == 1
                            copyfile(niifilepath{1},fullfile(subbidspetdir,[subs_in_tmp{sub} '_trc-' tracer_string '_zte_pet.nii']));
                            delete(niifilepath{1});
                        else
                            error ('\nmore than one .nii.gz file containing zte_search_string %s found for subject %s, please check\n\n', zte_search_string, subs_in_tmp{sub});
                        end
                        
                    copyfile(jsonfilepath,fullfile(subbidspetdir,[subs_in_tmp{sub} '_trc-' tracer_string '_zte_pet.json']));
                    
                elseif contains(jsonfilestruct.SeriesDescription, dynamic_search_string)
                    
                    niifilepath = gunzip(niigzfilepath);
                    
                        if size(niifilepath,1) == 1
                            copyfile(niifilepath{1},fullfile(subbidspetdir,[subs_in_tmp{sub} '_trc-' tracer_string '_rec-acdyn_pet.nii']));
                            delete(niifilepath{1});
                        else
                            error ('\nmore than one .nii.gz file containing dynamic_search_string %s found for subject %s, please check\n\n', dynamic_search_string, subs_in_tmp{sub});
                        end
                        
                    copyfile(jsonfilepath,fullfile(subbidspetdir,[subs_in_tmp{sub} '_trc-' tracer_string '_rec-acdyn_pet.json']));
                    
                end
                
            clear jsonfile_struct
            
        end % for loop over files in subjectdir
        
    end % if loop pet files
    
end % for loop over subjects
